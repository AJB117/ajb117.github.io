{"version":3,"file":"component---src-pages-home-papers-jsx-56a8e6e207902260ce22.js","mappings":"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","sources":["webpack://gatsby-starter-hello-world/./node_modules/@orcid/bibtex-parse-js/bibtexParse.js","webpack://gatsby-starter-hello-world/./src/components/Href.jsx","webpack://gatsby-starter-hello-world/./src/util/PapersUtil.js","webpack://gatsby-starter-hello-world/./src/components/Paper.jsx","webpack://gatsby-starter-hello-world/./src/pages/home/Papers.jsx"],"sourcesContent":["/* start bibtexParse 0.0.24 */\n//Original work by Henrik Muehe (c) 2010\n//\n//CommonJS port by Mikola Lysenko 2013\n//\n//Choice of compact (default) or pretty output from toBibtex:\n//\t\tNick Bailey, 2017.\n//\n//Port to Browser lib by ORCID / RCPETERS\n//\n//Issues:\n//no comment handling within strings\n//no string concatenation\n//no variable values yet\n//Grammar implemented here:\n//bibtex -> (string | preamble | comment | entry)*;\n//string -> '@STRING' '{' key_equals_value '}';\n//preamble -> '@PREAMBLE' '{' value '}';\n//comment -> '@COMMENT' '{' value '}';\n//entry -> '@' key '{' key ',' key_value_list '}';\n//key_value_list -> key_equals_value (',' key_equals_value)*;\n//key_equals_value -> key '=' value;\n//value -> value_quotes | value_braces | key;\n//value_quotes -> '\"' .*? '\"'; // not quite\n//value_braces -> '{' .*? '\"'; // not quite\n(function (exports) {\n  function BibtexParser() {\n    this.months = [\"jan\", \"feb\", \"mar\", \"apr\", \"may\", \"jun\", \"jul\", \"aug\", \"sep\", \"oct\", \"nov\", \"dec\"];\n    this.notKey = [',', '{', '}', ' ', '='];\n    this.pos = 0;\n    this.input = \"\";\n    this.entries = new Array();\n    this.currentEntry = \"\";\n\n    this.setInput = function (t) {\n      this.input = t;\n    };\n\n    this.getEntries = function () {\n      return this.entries;\n    };\n\n    this.isWhitespace = function (s) {\n      return s == ' ' || s == '\\r' || s == '\\t' || s == '\\n';\n    };\n\n    this.match = function (s, canCommentOut) {\n      if (canCommentOut == undefined || canCommentOut == null) canCommentOut = true;\n      this.skipWhitespace(canCommentOut);\n\n      if (this.input.substring(this.pos, this.pos + s.length) == s) {\n        this.pos += s.length;\n      } else {\n        throw TypeError(\"Token mismatch: match\", \"expected \" + s + \", found \" + this.input.substring(this.pos));\n      }\n\n      ;\n      this.skipWhitespace(canCommentOut);\n    };\n\n    this.tryMatch = function (s, canCommentOut) {\n      if (canCommentOut == undefined || canCommentOut == null) canCommentOut = true;\n      this.skipWhitespace(canCommentOut);\n\n      if (this.input.substring(this.pos, this.pos + s.length) == s) {\n        return true;\n      } else {\n        return false;\n      }\n\n      ;\n      this.skipWhitespace(canCommentOut);\n    };\n    /* when search for a match all text can be ignored, not just white space */\n\n\n    this.matchAt = function () {\n      while (this.input.length > this.pos && this.input[this.pos] != '@') {\n        this.pos++;\n      }\n\n      ;\n\n      if (this.input[this.pos] == '@') {\n        return true;\n      }\n\n      ;\n      return false;\n    };\n\n    this.skipWhitespace = function (canCommentOut) {\n      while (this.isWhitespace(this.input[this.pos])) {\n        this.pos++;\n      }\n\n      ;\n\n      if (this.input[this.pos] == \"%\" && canCommentOut == true) {\n        while (this.input[this.pos] != \"\\n\") {\n          this.pos++;\n        }\n\n        ;\n        this.skipWhitespace(canCommentOut);\n      }\n\n      ;\n    };\n\n    this.value_braces = function () {\n      var bracecount = 0;\n      this.match(\"{\", false);\n      var start = this.pos;\n      var escaped = false;\n\n      while (true) {\n        if (!escaped) {\n          if (this.input[this.pos] == '}') {\n            if (bracecount > 0) {\n              bracecount--;\n            } else {\n              var end = this.pos;\n              this.match(\"}\", false);\n              return this.input.substring(start, end);\n            }\n\n            ;\n          } else if (this.input[this.pos] == '{') {\n            bracecount++;\n          } else if (this.pos >= this.input.length - 1) {\n            throw TypeError(\"Unterminated value: value_braces\");\n          }\n\n          ;\n        }\n\n        ;\n        if (this.input[this.pos] == '\\\\' && escaped == false) escaped = true;else escaped = false;\n        this.pos++;\n      }\n\n      ;\n    };\n\n    this.value_comment = function () {\n      var str = '';\n      var brcktCnt = 0;\n\n      while (!(this.tryMatch(\"}\", false) && brcktCnt == 0)) {\n        str = str + this.input[this.pos];\n        if (this.input[this.pos] == '{') brcktCnt++;\n        if (this.input[this.pos] == '}') brcktCnt--;\n\n        if (this.pos >= this.input.length - 1) {\n          throw TypeError(\"Unterminated value: value_comment\", +this.input.substring(start));\n        }\n\n        ;\n        this.pos++;\n      }\n\n      ;\n      return str;\n    };\n\n    this.value_quotes = function () {\n      this.match('\"', false);\n      var start = this.pos;\n      var escaped = false;\n\n      while (true) {\n        if (!escaped) {\n          if (this.input[this.pos] == '\"') {\n            var end = this.pos;\n            this.match('\"', false);\n            return this.input.substring(start, end);\n          } else if (this.pos >= this.input.length - 1) {\n            throw TypeError(\"Unterminated value: value_quotes\", this.input.substring(start));\n          }\n\n          ;\n        }\n\n        if (this.input[this.pos] == '\\\\' && escaped == false) escaped = true;else escaped = false;\n        this.pos++;\n      }\n\n      ;\n    };\n\n    this.single_value = function () {\n      var start = this.pos;\n\n      if (this.tryMatch(\"{\")) {\n        return this.value_braces();\n      } else if (this.tryMatch('\"')) {\n        return this.value_quotes();\n      } else {\n        var k = this.key();\n        if (k.match(\"^[0-9]+$\")) return k;else if (this.months.indexOf(k.toLowerCase()) >= 0) return k.toLowerCase();else throw \"Value expected: single_value\" + this.input.substring(start) + ' for key: ' + k;\n      }\n\n      ;\n    };\n\n    this.value = function () {\n      var values = [];\n      values.push(this.single_value());\n\n      while (this.tryMatch(\"#\")) {\n        this.match(\"#\");\n        values.push(this.single_value());\n      }\n\n      ;\n      return values.join(\"\");\n    };\n\n    this.key = function (optional) {\n      var start = this.pos;\n\n      while (true) {\n        if (this.pos >= this.input.length) {\n          throw TypeError(\"Runaway key: key\");\n        }\n\n        ; // а-яА-Я is Cyrillic\n        //console.log(this.input[this.pos]);\n\n        if (this.notKey.indexOf(this.input[this.pos]) >= 0) {\n          if (optional && this.input[this.pos] != ',') {\n            this.pos = start;\n            return null;\n          }\n\n          ;\n          return this.input.substring(start, this.pos);\n        } else {\n          this.pos++;\n        }\n\n        ;\n      }\n\n      ;\n    };\n\n    this.key_equals_value = function () {\n      var key = this.key();\n\n      if (this.tryMatch(\"=\")) {\n        this.match(\"=\");\n        var val = this.value();\n        key = key.trim();\n        return [key, val];\n      } else {\n        throw TypeError(\"Value expected, equals sign missing: key_equals_value\", this.input.substring(this.pos));\n      }\n\n      ;\n    };\n\n    this.key_value_list = function () {\n      var kv = this.key_equals_value();\n      this.currentEntry['entryTags'] = {};\n      this.currentEntry['entryTags'][kv[0]] = kv[1];\n\n      while (this.tryMatch(\",\")) {\n        this.match(\",\"); // fixes problems with commas at the end of a list\n\n        if (this.tryMatch(\"}\")) {\n          break;\n        }\n\n        ;\n        kv = this.key_equals_value();\n        this.currentEntry['entryTags'][kv[0]] = kv[1];\n      }\n\n      ;\n    };\n\n    this.entry_body = function (d) {\n      this.currentEntry = {};\n      this.currentEntry['citationKey'] = this.key(true);\n      this.currentEntry['entryType'] = d.substring(1);\n\n      if (this.currentEntry['citationKey'] != null) {\n        this.match(\",\");\n      }\n\n      this.key_value_list();\n      this.entries.push(this.currentEntry);\n    };\n\n    this.directive = function () {\n      this.match(\"@\");\n      return \"@\" + this.key();\n    };\n\n    this.preamble = function () {\n      this.currentEntry = {};\n      this.currentEntry['entryType'] = 'PREAMBLE';\n      this.currentEntry['entry'] = this.value_comment();\n      this.entries.push(this.currentEntry);\n    };\n\n    this.comment = function () {\n      this.currentEntry = {};\n      this.currentEntry['entryType'] = 'COMMENT';\n      this.currentEntry['entry'] = this.value_comment();\n      this.entries.push(this.currentEntry);\n    };\n\n    this.entry = function (d) {\n      this.entry_body(d);\n    };\n\n    this.alernativeCitationKey = function () {\n      this.entries.forEach(function (entry) {\n        if (!entry.citationKey && entry.entryTags) {\n          entry.citationKey = '';\n\n          if (entry.entryTags.author) {\n            entry.citationKey += entry.entryTags.author.split(',')[0] += ', ';\n          }\n\n          entry.citationKey += entry.entryTags.year;\n        }\n      });\n    };\n\n    this.bibtex = function () {\n      while (this.matchAt()) {\n        var d = this.directive();\n        this.match(\"{\");\n\n        if (d.toUpperCase() == \"@STRING\") {\n          this.string();\n        } else if (d.toUpperCase() == \"@PREAMBLE\") {\n          this.preamble();\n        } else if (d.toUpperCase() == \"@COMMENT\") {\n          this.comment();\n        } else {\n          this.entry(d);\n        }\n\n        this.match(\"}\");\n      }\n\n      ;\n      this.alernativeCitationKey();\n    };\n  }\n\n  ;\n\n  exports.toJSON = function (bibtex) {\n    var b = new BibtexParser();\n    b.setInput(bibtex);\n    b.bibtex();\n    return b.entries;\n  };\n  /* added during hackathon don't hate on me */\n\n  /* Increased the amount of white-space to make entries\n   * more attractive to humans. Pass compact as false\n   * to enable */\n\n\n  exports.toBibtex = function (json, compact) {\n    if (compact === undefined) compact = true;\n    var out = '';\n    var entrysep = ',';\n    var indent = '';\n\n    if (!compact) {\n      entrysep = ',\\n';\n      indent = '    ';\n    }\n\n    for (var i in json) {\n      out += \"@\" + json[i].entryType;\n      out += '{';\n      if (json[i].citationKey) out += json[i].citationKey + entrysep;\n      if (json[i].entry) out += json[i].entry;\n\n      if (json[i].entryTags) {\n        var tags = indent;\n\n        for (var jdx in json[i].entryTags) {\n          if (tags.trim().length != 0) tags += entrysep + indent;\n          tags += jdx + (compact ? '={' : ' = {') + json[i].entryTags[jdx] + '}';\n        }\n\n        out += tags;\n      }\n\n      out += compact ? '}\\n' : '\\n}\\n\\n';\n    }\n\n    return out;\n  };\n})(typeof exports === 'undefined' ? this['bibtexParse'] = {} : exports);\n/* end bibtexParse */","import React from \"react\"\nimport \"../styles/home.css\"\nimport \"../styles/global.css\"\n\nconst Href = ({ href, children }) => (\n  <a href={href} target=\"_blank\" rel=\"noreferrer\">\n    {children}\n  </a>\n)\n\nexport default Href\n","import { toJSON } from \"@orcid/bibtex-parse-js\"\n\nexport const VenueToAbbrev = Object.freeze({\n  arXiv: \"Preprint\",\n  coRR: \"Preprint\",\n  \"International Conference on Machine Learning\": \"ICML\",\n  \"International Conference on Learning Representations\": \"ICLR\",\n  \"Conference on Neural Information Processing Systems\": \"NeurIPS\",\n  \"International Conference on Computer Vision\": \"ICCV\",\n  \"Conference on Computer Vision and Pattern Recognition\": \"CVPR\",\n  \"European Conference on Computer Vision\": \"ECCV\",\n  \"Association for the Advancement of Artificial Intelligence\": \"AAAI\",\n  \"International Joint Conference on Artificial Intelligence\": \"IJCAI\",\n  \"Annual Meeting of the Association for Computational Linguistics\": \"ACL\",\n  \"Conference on Empirical Methods in Natural Language Processing\": \"EMNLP\",\n  \"North American Chapter of the Association for Computational Linguistics\":\n    \"NAACL\",\n  \"International Conference on Acoustics, Speech, and Signal Processing\":\n    \"ICASSP\",\n  \"International Conference on Image Processing\": \"ICIP\",\n  \"International Conference on Data Mining\": \"ICDM\",\n  \"Knowledge Discovery and Data Mining\": \"KDD\",\n  \"International ACM SIGIR Conference on Research and Development in Information Retrieval\":\n    \"SIGIR\",\n  \"International World Wide Web Conference\": \"WWW\",\n  \"Transactions on Pattern Analysis and Machine Intelligence\": \"TPAMI\",\n  \"Transactions on Machine Learning Research\": \"TMLR\",\n})\n\nexport const Journals = new Set([\n  \"IEEE Transactions on Pattern Analysis and Machine Intelligence\",\n  \"Transactions on Machine Learning Research\",\n])\n\nexport const Conferences = new Set([\n  \"International Conference on Machine Learning\",\n  \"International Conference on Learning Representations\",\n  \"Conference on Neural Information Processing Systems\",\n  \"International Conference on Computer Vision\",\n  \"Conference on Computer Vision and Pattern Recognition\",\n  \"European Conference on Computer Vision\",\n  \"Association for the Advancement of Artificial Intelligence\",\n  \"International Joint Conference on Artificial Intelligence\",\n  \"Annual Meeting of the Association for Computational Linguistics\",\n  \"Conference on Empirical Methods in Natural Language Processing\",\n  \"North American Chapter of the Association for Computational Linguistics\",\n  \"International Conference on Acoustics, Speech, and Signal Processing\",\n  \"International Conference on Image Processing\",\n  \"International Conference on Data Mining\",\n  \"Knowledge Discovery and Data Mining\",\n  \"International ACM SIGIR Conference on Research and Development in Information Retrieval\",\n  \"International World Wide Web Conference\",\n])\n\nexport class Venue {\n  constructor(name) {\n    this.name = name\n    this.abbrev = VenueToAbbrev[name]\n  }\n\n  isConference() {\n    return Conferences.has(this.name)\n  }\n\n  isJournal() {\n    return Journals.has(this.name)\n  }\n}\n\nconst convertLFToFL = name => {\n  if (name.includes(\",\")) {\n    const nameArray = name.split(\",\")\n    return nameArray[1].trim() + \" \" + nameArray[0]\n  }\n  return name\n}\n\nconst parsePaperJSON = ({ author, booktitle, title, year, url }) => {\n  if (booktitle === undefined) {\n    booktitle = \"Preprint\"\n  }\n\n  const authors = author.split(\" and \").map(convertLFToFL)\n\n  return {\n    authors,\n    booktitle,\n    title,\n    year,\n    url,\n  }\n}\n\nexport const parseString = string => {\n  const paperJSON = toJSON(string)[0].entryTags\n  const paperContent = parsePaperJSON(paperJSON)\n  return paperContent\n}\n","import React from \"react\"\nimport Href from \"./Href\"\nimport { VenueToAbbrev } from \"../util/PapersUtil\"\n\nconst Authors = ({ authors }) => {\n  const needsOxfordComma = authors.length > 2\n  const isLastAuthor = idx => idx === authors.length - 1\n\n  return (\n    <span>\n      {authors.map((author, idx) => (\n        <span key={idx}>\n          {isLastAuthor(idx) ? \" and \" : \" \"}\n          {author.includes(\"Soga\") ? <b>{author}</b> : author}\n          {isLastAuthor(idx) || !needsOxfordComma ? \"\" : \", \"}\n        </span>\n      ))}\n    </span>\n  )\n}\n\nconst Paper = ({ authors, booktitle, title, year, url }) => (\n  <section className=\"paper\">\n    <strong>\n      <Href href={url}>{title}</Href>\n    </strong>\n    <section>\n      <Authors authors={authors} />\n    </section>\n    <section>\n      {booktitle in VenueToAbbrev ? VenueToAbbrev[booktitle] : booktitle} {year}\n      .{\" \"}\n      {title ===\n        \"Bridging Graph Position Encodings for Transformers with Weighted Graph-Walking Automata\" ||\n      title === \"Deep Ensembles for Graphs with Higher-Order Dependencies\" ? (\n        <>To appear.</>\n      ) : null}\n    </section>\n  </section>\n)\n\nexport default Paper\n","import React from \"react\"\nimport YAMLData from \"../../../content/content.yml\"\nimport Paper from \"../../components/Paper\"\nimport { parseString } from \"../../util/PapersUtil\"\n\nconst Papers = () => (\n  <section className=\"papers\">\n    <h2>Papers</h2>\n    {YAMLData.papers.split(/(?=@)/).map((paperString, idx) => {\n      return <Paper {...parseString(paperString)} key={idx} />\n    })}\n  </section>\n)\n\nexport default Papers\n"],"names":["exports","BibtexParser","this","months","notKey","pos","input","entries","Array","currentEntry","setInput","t","getEntries","isWhitespace","s","match","canCommentOut","undefined","skipWhitespace","substring","length","TypeError","tryMatch","matchAt","value_braces","bracecount","start","escaped","end","value_comment","str","brcktCnt","value_quotes","single_value","k","key","indexOf","toLowerCase","value","values","push","join","optional","key_equals_value","val","trim","key_value_list","kv","entry_body","d","directive","preamble","comment","entry","alernativeCitationKey","forEach","citationKey","entryTags","author","split","year","bibtex","toUpperCase","string","toJSON","b","toBibtex","json","compact","out","entrysep","indent","i","entryType","tags","jdx","href","children","target","rel","VenueToAbbrev","Object","freeze","arXiv","coRR","convertLFToFL","Set","name","includes","nameArray","parseString","booktitle","title","url","paperJSON","authors","map","Authors","needsOxfordComma","isLastAuthor","idx","className","Href","YAMLData","paperString"],"sourceRoot":""}