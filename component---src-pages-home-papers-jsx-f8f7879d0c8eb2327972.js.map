{"version":3,"file":"component---src-pages-home-papers-jsx-f8f7879d0c8eb2327972.js","mappings":"m4GAAaA,EAAW,IAAIC,IAAI,CAC9B,iEACA,8CAGWC,EAAc,IAAID,IAAI,CACjC,+CACA,uDACA,sDACA,wCACA,yDACA,4CACA,8CACA,wDACA,yCACA,6DACA,4DACA,kEACA,iEACA,4EACA,0EACA,uEACA,+CACA,0CACA,6EACA,0FACA,0CACA,qDACA,6EACA,cAGIE,EAAAA,WACJ,WAAYC,EAAMC,GAChBC,KAAKF,KAAOA,EACZE,KAAKD,OAASA,EACf,kBAQA,OARA,EAEDE,aAAA,WACE,OAAOL,EAAYM,IAAIF,KAAKF,OAC7B,EAEDK,UAAA,WACE,OAAOT,EAASQ,IAAIF,KAAKF,OAC1B,EAZGD,GAeOO,EAAS,CACpB,IAAIP,EAAM,QAAS,YACnB,IAAIA,EAAM,OAAQ,YAClB,IAAIA,EAAM,+CAAgD,QAC1D,IAAIA,EAAM,uDAAwD,QAClE,IAAIA,EAAM,sDAAuD,WACjE,IAAIA,EAAM,wCAAyC,WACnD,IAAIA,EACF,4CACA,uCAEF,IAAIA,EACF,yDACA,kDAEF,IAAIA,EAAM,8CAA+C,QACzD,IAAIA,EAAM,wDAAyD,QACnE,IAAIA,EAAM,yCAA0C,QACpD,IAAIA,EACF,6DACA,QAEF,IAAIA,EACF,4DACA,SAEF,IAAIA,EACF,kEACA,OAEF,IAAIA,EACF,iEACA,SAEF,IAAIA,EACF,4EACA,oBAEF,IAAIA,EACF,0EACA,SAEF,IAAIA,EACF,uEACA,UAGF,IAAIA,EAAM,+CAAgD,QAC1D,IAAIA,EAAM,0CAA2C,QACrD,IAAIA,EACF,+DACA,OAEF,IAAIA,EACF,0FACA,SAEF,IAAIA,EAAM,0CAA2C,OACrD,IAAIA,EACF,4DACA,SAEF,IAAIA,EAAM,4CAA6C,QACvD,IAAIA,EAAM,qDAAsD,QAChE,IAAIA,EACF,6EACA,QAEF,IAAIA,EACF,iEACA,SAEF,IAAIA,EAAM,YAAa,cAGnBQ,EAAgB,SAAAP,GACpB,GAAIA,EAAKQ,SAAS,KAAM,CACtB,IAAMC,EAAYT,EAAKU,MAAM,KAC7B,OAAOD,EAAU,GAAGE,OAAS,IAAMF,EAAU,GAE/C,OAAOT,GA2BIY,EAAmB,SAAC,GAU1B,IATLC,EASI,EATJA,OACAC,EAQI,EARJA,UACAC,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,IACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,KACAC,EACI,EADJA,KAQA,YANkBC,IAAdR,IACFA,EAAY,YAKP,CACLS,QAHcV,EAAOH,MAAM,SAASc,IAAIjB,GAIxCO,UAAAA,EACAC,MAAAA,EACAC,KAAAA,EACAC,IAAAA,EACAC,QAAAA,EACAC,SAAAA,EACAC,KAAAA,EACAC,KAAAA,I,ylBCxKJ,IAYMI,EAAQ,SAAC,GAWR,IAVLF,EAUI,EAVJA,QACAT,EASI,EATJA,UACAK,EAQI,EARJA,SACAJ,EAOI,EAPJA,MACAC,EAMI,EANJA,KACAC,EAKI,EALJA,IACAC,EAII,EAJJA,QACAQ,EAGI,EAHJA,OACAN,EAEI,EAFJA,KACAC,EACI,EADJA,KAEA,EAAoCM,EAAAA,UAAe,GAA5CC,EAAP,KAAmBC,EAAnB,KACIC,EAAiBhB,EAAN,IAAmBE,GAAgB,SAATI,EAAkB,UAAY,IAAxD,IACXW,EAAW,GAIf,OAHIZ,IAAUY,GAAQ,YAAgBZ,EAAhB,KAClBE,IAAMU,GAAQ,IAAQV,EAAR,KAGhB,2BAASW,UAAU,SAChBjB,EACD,+BAAUQ,GACV,+BACGO,EACD,0BAAKC,GACL,gBAACE,EAAA,EAAD,CAAMD,UAAU,YAAYE,KAAMjB,GAAlC,SAGCC,GACC,gBAACe,EAAA,EAAD,CAAMD,UAAU,YAAYE,KAAMhB,GAAlC,QAIF,0BACEc,UAAU,YACVG,MAAO,CACLC,gBAAiB,QACjBC,OAAQ,WAEVC,QAAS,kBAAMT,GAAc,SAAAU,GAAI,OAAKA,OANxC,WAWDX,GACC,gCACE,uBACEO,MAAO,CACLK,UAAW,SACXJ,gBAAiB,UACjBK,QAAS,QAGVf,EACD,0BACEM,UAAU,YACVG,MAAO,CACLC,gBAAiB,QACjBC,OAAQ,UACRK,MAAO,QACPC,aAAc,QAGhB,gBAAC,IAAD,CACEC,KAAMC,EAAAA,IACNP,QAAS,WACPQ,UAAUC,UAAUC,UAAUtB,WAuDhD,EA5Ce,WACb,ID4ByBA,EACnBuB,EACFC,EC9BEC,EAAeC,EAAAA,EAAAA,MAAsB,QAAQ5B,KAAI,SAAA6B,GAAK,OAAIA,EAAM1C,UAClE2C,GD2BqB5B,EC3BA0B,EAAAA,ED4BnBH,EAAU,GACZC,EAAe,KAEnBxB,EAAOhB,MAAM,SAAS6C,SAAQ,SAAAC,GAC5B,GAAIA,EAAKC,WAAW,KAAM,CACxB,IAAMrC,EAAOoC,EAAK9C,MAAM,KAAK,GAAGgD,UAAU,GACpCC,EAAMH,EAAK9C,MAAM,KAAK,GAAGA,MAAM,KAAK,GAC1CwC,EAAe,CAAE9B,KAAAA,EAAMuC,IAAAA,GACvBV,EAAQW,KAAKV,QACR,GAAIM,EAAKC,WAAW,KACzBP,EAAe,UACV,GAAIA,EAAc,CACvB,MAAsBM,EAAK9C,MAAM,KAAKc,KAAI,SAAAqC,GAAC,OAAIA,EAAElD,UAA1CX,EAAP,KAAa8D,EAAb,KACAZ,EAAalD,GAAQ8D,EAClBC,QAAQ,KAAM,IACdA,QAAQ,KAAM,IACdA,QAAQ,KAAM,QAIdd,GC/CJzB,IAAIZ,GACJY,KAAI,SAAC6B,EAAOW,GACX,IA9FgBzC,EACd0C,EACAC,EA4FIC,EAAQ7D,EAAO8D,MAAK,SAAAD,GAAK,OAAIA,EAAMnE,OAASqD,EAAMvC,aACpDuD,EAAaF,EAAMlE,OAQvB,OANIkE,EAAM9D,YACRgE,GAAc,KAEdA,GAAc,IAGT,EAAP,KACKhB,GADL,IAEE9B,SAzGcA,EAyGS8B,EAAM9B,QAxG7B0C,EAAmB1C,EAAQ+C,OAAS,EACpCJ,EAAe,SAAAF,GAAG,OAAIA,IAAQzC,EAAQ+C,OAAS,GAC9C/C,EAAQC,KAAI,SAACX,EAAQmD,GAAT,OACjB,wBAAML,IAAKK,GACRE,EAAaF,GAAO,QAAU,IAC9BnD,EAAOL,SAAS,QAAU,yBAAIK,GAAcA,EAC5CqD,EAAaF,KAASC,EAAmB,GAAK,UAmG7CnD,UAAWuD,EACX3C,OAAQyB,EAAaa,QAIrBO,EAAkBjB,EAAOkB,QAAO,SAAAnB,GAAK,MAAmB,cAAfA,EAAMjC,QAC/CqD,EAAkBnB,EAAOkB,QAAO,SAAAnB,GAAK,MAAmB,cAAfA,EAAMjC,QAErD,OACE,gCACE,2BAASY,UAAU,UACjB,0CACA,8DACCuC,EAAgB/C,KAAI,SAAC6B,EAAOW,GAAR,OACnB,gBAACvC,EAAD,eAAOkC,IAAKK,GAASX,QAGzB,2BAASrB,UAAU,UACjB,2CACCyC,EAAgBjD,KAAI,SAAC6B,EAAOW,GAAR,OACnB,gBAACvC,EAAD,eAAOkC,IAAKK,GAASX,W,qBC1IhB,SAASqB,EAA8BC,EAAQC,GAC5D,GAAc,MAAVD,EAAgB,MAAO,GAC3B,IAEIhB,EAAKkB,EAFLC,EAAS,GACTC,EAAaC,OAAOC,KAAKN,GAG7B,IAAKE,EAAI,EAAGA,EAAIE,EAAWT,OAAQO,IACjClB,EAAMoB,EAAWF,GACbD,EAASM,QAAQvB,IAAQ,IAC7BmB,EAAOnB,GAAOgB,EAAOhB,IAGvB,OAAOmB,E","sources":["webpack://gatsby-starter-hello-world/./src/util/PapersUtil.js","webpack://gatsby-starter-hello-world/./src/pages/home/Papers.jsx","webpack://gatsby-starter-hello-world/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"sourcesContent":["export const Journals = new Set([\n  \"IEEE Transactions on Pattern Analysis and Machine Intelligence\",\n  \"Transactions on Machine Learning Research\",\n])\n\nexport const Conferences = new Set([\n  \"International Conference on Machine Learning\",\n  \"International Conference on Learning Representations\",\n  \"Conference on Neural Information Processing Systems\",\n  \"Neural Information Processing Systems\",\n  \"Neural Information Processing Systems AIDrugX Workshop\",\n  \"Neural Information Processing Systems DBT\",\n  \"International Conference on Computer Vision\",\n  \"Conference on Computer Vision and Pattern Recognition\",\n  \"European Conference on Computer Vision\",\n  \"Association for the Advancement of Artificial Intelligence\",\n  \"International Joint Conference on Artificial Intelligence\",\n  \"Annual Meeting of the Association for Computational Linguistics\",\n  \"Conference on Empirical Methods in Natural Language Processing\",\n  \"Conference on Empirical Methods in Natural Language Processing (Findings)\",\n  \"North American Chapter of the Association for Computational Linguistics\",\n  \"International Conference on Acoustics, Speech, and Signal Processing\",\n  \"International Conference on Image Processing\",\n  \"International Conference on Data Mining\",\n  \"ACM SIGKDD International Conference on Knowledge Discovery and Data Mining\",\n  \"International ACM SIGIR Conference on Research and Development in Information Retrieval\",\n  \"International World Wide Web Conference\",\n  \"Conference on Information and Knowledge Management\",\n  \"ACM Conference on Computer-Supported Cooperative Work and Social Computing\",\n  \"Submitted\",\n])\n\nclass Venue {\n  constructor(name, abbrev) {\n    this.name = name\n    this.abbrev = abbrev\n  }\n\n  isConference() {\n    return Conferences.has(this.name)\n  }\n\n  isJournal() {\n    return Journals.has(this.name)\n  }\n}\n\nexport const Venues = [\n  new Venue(\"arXiv\", \"Preprint\"),\n  new Venue(\"coRR\", \"Preprint\"),\n  new Venue(\"International Conference on Machine Learning\", \"ICML\"),\n  new Venue(\"International Conference on Learning Representations\", \"ICLR\"),\n  new Venue(\"Conference on Neural Information Processing Systems\", \"NeurIPS\"),\n  new Venue(\"Neural Information Processing Systems\", \"NeurIPS\"),\n  new Venue(\n    \"Neural Information Processing Systems DBT\",\n    \"NeurIPS Datasets & Benchmarks Track\"\n  ),\n  new Venue(\n    \"Neural Information Processing Systems AIDrugX Workshop\",\n    \"NeurIPS Workshop on AI for New Drug Modalities\"\n  ),\n  new Venue(\"International Conference on Computer Vision\", \"ICCV\"),\n  new Venue(\"Conference on Computer Vision and Pattern Recognition\", \"CVPR\"),\n  new Venue(\"European Conference on Computer Vision\", \"ECCV\"),\n  new Venue(\n    \"Association for the Advancement of Artificial Intelligence\",\n    \"AAAI\"\n  ),\n  new Venue(\n    \"International Joint Conference on Artificial Intelligence\",\n    \"IJCAI\"\n  ),\n  new Venue(\n    \"Annual Meeting of the Association for Computational Linguistics\",\n    \"ACL\"\n  ),\n  new Venue(\n    \"Conference on Empirical Methods in Natural Language Processing\",\n    \"EMNLP\"\n  ),\n  new Venue(\n    \"Conference on Empirical Methods in Natural Language Processing (Findings)\",\n    \"EMNLP (Findings)\"\n  ),\n  new Venue(\n    \"North American Chapter of the Association for Computational Linguistics\",\n    \"NAACL\"\n  ),\n  new Venue(\n    \"International Conference on Acoustics, Speech, and Signal Processing\",\n    \"ICASSP\"\n  ),\n\n  new Venue(\"International Conference on Image Processing\", \"ICIP\"),\n  new Venue(\"International Conference on Data Mining\", \"ICDM\"),\n  new Venue(\n    \"ACM SIGKDD Conference on Knowledge Discovery and Data Mining\",\n    \"KDD\"\n  ),\n  new Venue(\n    \"International ACM SIGIR Conference on Research and Development in Information Retrieval\",\n    \"SIGIR\"\n  ),\n  new Venue(\"International World Wide Web Conference\", \"WWW\"),\n  new Venue(\n    \"Transactions on Pattern Analysis and Machine Intelligence\",\n    \"TPAMI\"\n  ),\n  new Venue(\"Transactions on Machine Learning Research\", \"TMLR\"),\n  new Venue(\"Conference on Information and Knowledge Management\", \"CIKM\"),\n  new Venue(\n    \"ACM Conference on Computer-Supported Cooperative Work and Social Computing\",\n    \"CSCW\"\n  ),\n  new Venue(\n    \"Pacific-Asia Conference on Knowledge Discovery and Data Mining\",\n    \"PAKDD\"\n  ),\n  new Venue(\"Submitted\", \"Submitted\"),\n]\n\nconst convertLFToFL = name => {\n  if (name.includes(\",\")) {\n    const nameArray = name.split(\",\")\n    return nameArray[1].trim() + \" \" + nameArray[0]\n  }\n  return name\n}\n\nexport const parseBibTeX = bibtex => {\n  const entries = []\n  let currentEntry = null\n\n  bibtex.split(/\\r?\\n/).forEach(line => {\n    if (line.startsWith(\"@\")) {\n      const type = line.split(\"{\")[0].substring(1)\n      const key = line.split(\"{\")[1].split(\"}\")[0]\n      currentEntry = { type, key }\n      entries.push(currentEntry)\n    } else if (line.startsWith(\"}\")) {\n      currentEntry = null\n    } else if (currentEntry) {\n      const [name, value] = line.split(\"=\").map(s => s.trim())\n      currentEntry[name] = value\n        .replace(/^{/, \"\")\n        .replace(/,$/, \"\")\n        .replace(/}$/, \"\")\n    }\n  })\n\n  return entries\n}\n\nexport const preprocessPapers = ({\n  author,\n  booktitle,\n  title,\n  year,\n  url,\n  codeUrl,\n  workshop,\n  type,\n  note,\n}) => {\n  if (booktitle === undefined) {\n    booktitle = \"Preprint\"\n  }\n\n  const authors = author.split(\" and \").map(convertLFToFL)\n\n  return {\n    authors,\n    booktitle,\n    title,\n    year,\n    url,\n    codeUrl,\n    workshop,\n    type,\n    note,\n  }\n}\n","import React from \"react\"\nimport YAMLData from \"../../../content/content.yml\"\nimport Href from \"../../components/Href\"\nimport {\n  isJournal,\n  Venues,\n  parseBibTeX,\n  preprocessPapers,\n} from \"../../util/PapersUtil\"\nimport { faCopy } from \"@fortawesome/free-regular-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\nconst formatAuthors = authors => {\n  const needsOxfordComma = authors.length > 2\n  const isLastAuthor = idx => idx === authors.length - 1\n  return authors.map((author, idx) => (\n    <span key={idx}>\n      {isLastAuthor(idx) ? \" and \" : \" \"}\n      {author.includes(\"Soga\") ? <b>{author}</b> : author}\n      {isLastAuthor(idx) || !needsOxfordComma ? \"\" : \", \"}\n    </span>\n  ))\n}\n\nconst Paper = ({\n  authors,\n  booktitle,\n  workshop,\n  title,\n  year,\n  url,\n  codeUrl,\n  bibtex,\n  type,\n  note,\n}) => {\n  const [showBibtex, setShowBibtex] = React.useState(false)\n  let venueString = `${booktitle} ${year}${type === \"oral\" ? \" (Oral)\" : \"\"}.`\n  let addendum = \"\"\n  if (workshop) addendum += ` Also in ${workshop}.`\n  if (note) addendum += ` ${note}.`\n\n  return (\n    <section className=\"paper\">\n      {title}\n      <section>{authors}</section>\n      <section>\n        {venueString}\n        <em>{addendum}</em>\n        <Href className=\"paperLink\" href={url}>\n          arXiv\n        </Href>\n        {codeUrl && (\n          <Href className=\"paperLink\" href={codeUrl}>\n            code\n          </Href>\n        )}\n        <button\n          className=\"paperLink\"\n          style={{\n            backgroundColor: \"white\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => setShowBibtex(prev => !prev)}\n        >\n          BibTeX\n        </button>\n      </section>\n      {showBibtex && (\n        <>\n          <pre\n            style={{\n              overflowX: \"scroll\",\n              backgroundColor: \"#D0D0D0\",\n              padding: \"4px\",\n            }}\n          >\n            {bibtex}\n            <button\n              className=\"paperLink\"\n              style={{\n                backgroundColor: \"white\",\n                cursor: \"pointer\",\n                float: \"right\",\n                marginBottom: \"0px\",\n              }}\n            >\n              <FontAwesomeIcon\n                icon={faCopy}\n                onClick={() => {\n                  navigator.clipboard.writeText(bibtex)\n                }}\n              />\n            </button>\n          </pre>\n        </>\n      )}\n    </section>\n  )\n}\n\nconst Papers = () => {\n  const paperStrings = YAMLData.papers.split(\"\\n\\n\").map(paper => paper.trim())\n  let papers = parseBibTeX(YAMLData.papers)\n    .map(preprocessPapers)\n    .map((paper, idx) => {\n      const venue = Venues.find(venue => venue.name === paper.booktitle)\n      let venueAbbrv = venue.abbrev\n\n      if (venue.isJournal()) {\n        venueAbbrv += \", \"\n      } else {\n        venueAbbrv += \" \"\n      }\n\n      return {\n        ...paper,\n        authors: formatAuthors(paper.authors),\n        booktitle: venueAbbrv,\n        bibtex: paperStrings[idx],\n      }\n    })\n\n  const publishedPapers = papers.filter(paper => paper.type !== \"submitted\")\n  const submittedPapers = papers.filter(paper => paper.type === \"submitted\")\n\n  return (\n    <>\n      <section className=\"papers\">\n        <h2>Publications</h2>\n        <p>(*) indicates equal contribution.</p>\n        {publishedPapers.map((paper, idx) => (\n          <Paper key={idx} {...paper} />\n        ))}\n      </section>\n      <section className=\"papers\">\n        <h2>In Submission</h2>\n        {submittedPapers.map((paper, idx) => (\n          <Paper key={idx} {...paper} />\n        ))}\n      </section>\n    </>\n  )\n}\n\nexport default Papers\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"names":["Journals","Set","Conferences","Venue","name","abbrev","this","isConference","has","isJournal","Venues","convertLFToFL","includes","nameArray","split","trim","preprocessPapers","author","booktitle","title","year","url","codeUrl","workshop","type","note","undefined","authors","map","Paper","bibtex","React","showBibtex","setShowBibtex","venueString","addendum","className","Href","href","style","backgroundColor","cursor","onClick","prev","overflowX","padding","float","marginBottom","icon","faCopy","navigator","clipboard","writeText","entries","currentEntry","paperStrings","YAMLData","paper","papers","forEach","line","startsWith","substring","key","push","s","value","replace","idx","needsOxfordComma","isLastAuthor","venue","find","venueAbbrv","length","publishedPapers","filter","submittedPapers","_objectWithoutPropertiesLoose","source","excluded","i","target","sourceKeys","Object","keys","indexOf"],"sourceRoot":""}